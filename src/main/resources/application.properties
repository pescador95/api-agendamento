# PARA RODAR A APLICAÇÃO UTILIZANDO O DOCKER, DEIXE COMENTADO AS TAGS ABAIXO.

# VOCÊ PRECISARÁ DE UM BANCO POSTGRES

##############################################################################

# DEV
#%dev.quarkus.datasource.db-kind=postgresql
#%dev.quarkus.datasource.username=postgres
#%dev.quarkus.datasource.password=postgres
#%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/app_agendamento
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=import.sql,role.sql,organizacao.sql,pessoa.sql,usuario.sql,usuarioroles.sql,usuarioorganizacao.sql,agendamento.sql,newsequence.sql
%dev.quarkus.datasource.jdbc.driver=org.postgresql.Driver
quarkus.hibernate-orm.jdbc.timezone=UTC-3

##############################################################################

# PROD
# configure your datasource
#%prod.quarkus.datasource.db-kind=postgresql
#%prod.quarkus.datasource.jdbc.url=jdbc:${DATABASE_URL}
#%prod.quarkus.datasource.username=${DATABASE_USER}
#%prod.quarkus.datasource.password=${DATABASE_PASSWD}
#%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
#%prod.quarkus.hibernate-orm.database.generation=drop-and-create
#%prod.quarkus.datasource.jdbc.driver=org.postgresql.Driver

###############################################################################

# Config CORS
quarkus.http.cors=true
quarkus.http.cors.origins="*"
#quarkus.http.cors.methods=GET, POST, OPTIONS, PUT, DELETE
#quarkus.http.cors.headers=Content-Type, Authorization, Referer, Content-Length, Host, Access-Control-Allow-Origin, Accept-Language, User-Agent, Accept-Encoding, Connection, x-requested-with, Content-Type, Range, Cache-Control, Pragma, Sec-Fetch-Dest, Sec-Fetch-Mode, Sec-Fetch-Site
#quarkus.http.cors.access-control-max-age=24H
#quarkus.http.cors.access-control-allow-credentials=false

# Config Auth JWT
quarkus.native.resources.includes=publicKey.pem
mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem
mp.jwt.verify.issuer=http://localhost:8080
smallrye.jwt.sign.key.location=privateKey.pem
smallrye.jwt.path.groups=privilegio

# Config open API
quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.always-include=true
#mp.openapi.scan.disable=true
quarkus.live-reload.instrumentation=true
quarkus.locales=pt-BR
quarkus.native.user-country=BRA
quarkus.native.user-language=BRA
#############################################################################
quarkus.log.level=INFO
quarkus.http.host=0.0.0.0

# Mailer
quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN
quarkus.mailer.from=${EMAIL_USER}
quarkus.mailer.host=smtp.gmail.com
quarkus.mailer.port=465
quarkus.mailer.ssl=true
quarkus.mailer.username=${EMAIL_USER}
quarkus.mailer.password=${EMAIL_PWD}
quarkus.mailer.mock=false

# Multipart
quarkus.rest-client."org.acme.rest.client.multipart.MultipartService".url=http://localhost:8080/
quarkus.http.body.uploads-directory=src/main/resources/META-INF/resources/uploads/
quarkus.http.body.handle-file-uploads=true
bucket.name=tcc-agendamento

# TLS
quarkus.tls.trust-all=true

# Google Calendar Rest Client
quarkus.google.cloud.project-id=${GCPI}
quarkus.google.cloud.credentials.location=src/main/resources/credentials.json
quarkus.rest-client.google-calendar.verify-host=false
quarkus.rest-client.google-calendar.url=https://content.googleapis.com/calendar/v3/calendars/00019fef9c996109a580ac301787efadbd9f58fc7c2929863f6fed4d734329d2@group.calendar.google.com/events
quarkus.rest-client.google-calendar.scope=javax.inject.Singleton
microprofile.rest.client.disable.default.mapper=false
google-calendar/mp-rest/url=https://www.googleapis.com
google-calendar/mp-rest/scope=https

# Scheduler
counter.cron.expression=*/5 * * * * ?
quarkus.jackson.timezone=UTC-3
quarkus.scheduler.enabled=false

# New Rest Client Example
quarkus.rest-client.extensions-api.verify-host=false
quarkus.rest-client.extensions-api.url=https://stage.code.quarkus.io/api
quarkus.rest-client.extensions-api.scope=javax.inject.Singleton
